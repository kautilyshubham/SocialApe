{"version":3,"sources":["network/axios.js","network/urlConst.js","network/keyConst.js","store/types.js","network/userAction.js","components/DeleteScream.js","components/Toster.js","components/Comments.js","components/AddComment.js","network/screamAction.js","components/Like.js","components/ScreamDialog.js","components/Scream.js","components/EditProfile.js","components/Profile.js","pages/home.js","utils/globalFunctions.js","pages/login.js","pages/signup.js","components/PostScream.js","components/Navbar.js","utils/AuthRoute.js","utils/Loader.js","App.js","utils/theme.js","serviceWorker.js","store/reducers/userReducer.js","store/reducers/screamReducer.js","store/reducers/uiReducer.js","store/reducers/index.js","index.js"],"names":["instance","axios","create","baseURL","interceptors","request","use","token","localStorage","getItem","console","log","headers","Authorization","response","res","error","err","Promise","reject","LOADING_UI","$userSignup","userData","success","dispatch","type","payload","post","urlConst","then","setItem","data","keyConst","catch","$getUserData","get","$logoutUser","removeItem","Transition","React","forwardRef","props","ref","Slide","direction","DeleteScream","status","close","deleteHandle","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","toast","configure","autoClose","draggable","position","POSITION","TOP_RIGHT","ShowToast","message","warn","Comments","comments","classes","large","width","height","handle","fontSize","para","marginBottom","map","comment","index","key","style","display","padding","borderTop","Avatar","className","src","userImage","marginLeft","Typography","component","variant","userHandle","moment","createdAt","format","body","connect","$addComment","screamId","url","useState","postText","setPostText","isError","setError","margin","TextField","label","fullWidth","multiline","rows","value","onChange","e","target","postChange","helperText","commentData","Like","state","isLiked","checkLiked","likes","find","like","likeClickHandler","authenticated","$unlikeScream","$likeScream","alert","this","setState","prevProps","IconButton","aria-label","likeCount","Component","user","ScreamDialog","scream","$getScream","changeStatus","commentCount","maxWidth","textAlign","flexDirection","alignItems","alt","marginTop","marginRight","minHeight","CircularProgress","top","left","withStyles","theme","spacing","title","Scream","deleteScreamHandler","$deleteScream","deleteModal","handleClick","event","anchorEl","currentTarget","handleClose","detailDialog","Card","root","CardHeader","avatar","action","Link","href","textDecoration","textTransform","fontWeight","cursor","subheader","Menu","Boolean","MenuItem","CardContent","CardActions","media","backgroundColor","isLoading","UI","loading","$editUserDetail","userDetail","bio","setBio","website","setWebsite","location","SetLocation","useEffect","bioChangeHandler","websitChangeHandler","locationChangeHandler","useStyles","makeStyles","$uploadProfileImage","image","imageUrl","editProfile","setEditProfile","Badge","badgeContent","Tooltip","document","getElementById","click","name","files","formData","FormData","append","handleImageChange","hidden","accept","gutterBottom","rel","disableSpacing","Paper","align","varient","Home","screams","$getAllScreams","screamsData","$getAllNotifications","Grid","container","item","sm","xs","isEmailValid","email","trim","test","Object","keys","length","isValidPassword","password","isEmpty","text","Login","changeTypeHandler","textChangeHandler","checkError","emailCheck","onSubmitHandler","isValid","loginData","$userLogin","history","push","emailRef","createRef","current","focus","placeholder","Signup","passwordCheck","confirmPassword","required","$postScream","autoFocus","screamData","Navbar","isPostScream","AppBar","Toolbar","flexGrow","notifications","to","AuthRoute","rest","render","Loader","progress","setProgress","timer","setInterval","oldProgress","clearInterval","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","form","pageTitle","textField","button","customError","invisibleSeparator","border","visibleSeparator","borderBottom","paper","profile","objectFit","borderRadius","verticalAlign","buttons","FBToken","jwtDecode","exp","Date","now","window","clear","prototype","PropsTypes","object","isRequired","setAuthenticated","exact","path","hostname","match","initialState","credentials","userReducer","filter","screamReducer","findIndex","newIndex","splice","tempScreams","commentindex","showLoader","uiReducer","middleware","thunk","reducers","combineReducers","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f735ef3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n  baseURL: \"https://asia-east2-socialape-e9c44.cloudfunctions.net/api/\"\r\n});\r\n\r\n// Error handlers\r\nconst errorHandler = err => {\r\n  console.log(err);\r\n};\r\n\r\n// Success handlers\r\nconst successHandler = res => {\r\n  console.log(\"RESPONSE =>\", res);\r\n  return res;\r\n};\r\n\r\n// Interceptors\r\n//////////////////////////////\r\n\r\ninstance.interceptors.request.use(request => {\r\n  const token = localStorage.getItem(\"FBToken\");\r\n  console.log(\"REQUEST =>\", request);\r\n  if (token) {\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n    return request;\r\n  }\r\n  return request;\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  response => successHandler(response),\r\n  error => {\r\n    errorHandler(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","export default {\r\n  screams_url: \"screams/\",\r\n  scream_url: \"scream/\",\r\n  login_url: \"login/\",\r\n  signup_url: \"signup/\",\r\n  user_url: \"user/\",\r\n  upload_img: \"user/image\",\r\n  notifications_url: \"notifications/\"\r\n};\r\n","export default {\r\n  Raw_Header: \"application/json\",\r\n  token: \"token\",\r\n  EMAIL: \"email\",\r\n  PASSWORD: \"password\",\r\n  CONFIRM_PASSWORD: \"confirmPassword\",\r\n  HANDLE: \"handle\",\r\n  CREDENTIALS: \"credentials\",\r\n  TOAST_SUCCESS: \"SUCCESS\",\r\n  TOAST_DANGER: \"DANGER\",\r\n  TOAST_WARN: \"WARNING\"\r\n};\r\n","// user reducer types\r\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\r\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const LOADING_USER = \"LOADING_USER\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\n// UI reducer type\r\nexport const SET_ERRORS = \"SET_ERRORS\";\r\nexport const LOADING_UI = \"LOADING_UI\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\n// scream reducer types\r\nexport const LIKE_SCREAM = \"LIKE_SCREAM\";\r\nexport const UNLIKE_SCREAM = \"UNLIKE_SCREAM\";\r\nexport const SET_SCREAMS = \"SET_SCREAMS\";\r\nexport const SET_SCREAM = \"SET_SCREAM\";\r\nexport const DELETE_SCREAM = \"DELETE_SCREAM\";\r\nexport const POST_SCREAM = \"POST_SCREAM\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\n","import { instance } from \"./axios\";\r\nimport urlConst from \"./urlConst\";\r\nimport keyConst from \"./keyConst\";\r\nimport {\r\n  LOADING_UI,\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  USER_LOGOUT\r\n} from \"../store/types\";\r\n\r\nexport const $userLogin = (userData, success) => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n\r\n  instance\r\n    .post(urlConst.login_url, userData, keyConst.Raw_Header)\r\n    .then(res => {\r\n      if (res) {\r\n        localStorage.setItem(\"FBToken\", res.data[keyConst.token]);\r\n        success(res);\r\n        dispatch({ type: SET_AUTHENTICATED });\r\n        dispatch({ type: LOADING_UI, payload: false });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n    });\r\n};\r\n\r\nexport const $userSignup = (userData, success) => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n\r\n  instance\r\n    .post(urlConst.signup_url, userData)\r\n    .then(res => {\r\n      localStorage.setItem(\"FBToken\", res.data[keyConst.token]);\r\n      success(res);\r\n      dispatch({ type: SET_AUTHENTICATED });\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n    });\r\n};\r\nexport const $uploadProfileImage = (image, success) => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n  instance\r\n    .post(urlConst.upload_img, image)\r\n    .then(res => {\r\n      if (res) {\r\n        dispatch(\r\n          $getUserData(res => {\r\n            console.log(res);\r\n          })\r\n        );\r\n      }\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n\r\n      success(res);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n    });\r\n};\r\n\r\nexport const $editUserDetail = (userDetail, success) => {\r\n  return dispatch => {\r\n    dispatch({ type: LOADING_UI, payload: true });\r\n    instance\r\n      .post(urlConst.user_url, userDetail)\r\n      .then(res => {\r\n        success();\r\n        dispatch($getUserData(success => {}));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch({ type: LOADING_UI, payload: false });\r\n      });\r\n  };\r\n};\r\n\r\nexport const $getUserData = success => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n  instance.get(urlConst.user_url).then(res => {\r\n    success(res.data);\r\n    dispatch({ type: SET_USER, payload: res.data });\r\n    dispatch({ type: LOADING_UI, payload: false });\r\n  });\r\n};\r\n\r\nexport const $logoutUser = success => dispatch => {\r\n  localStorage.removeItem(\"FBToken\");\r\n  dispatch({ type: SET_UNAUTHENTICATED });\r\n  dispatch({ type: USER_LOGOUT });\r\n  success();\r\n};\r\n\r\n// notifications\r\nexport const $getAllNotifications = success => dispatch => {\r\n  instance\r\n    .get(urlConst.notifications_url)\r\n    .then(res => {\r\n      success(res);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n// read notifications\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DeleteScream(props) {\r\n  const { status, close, deleteHandle } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={status}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={close}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">Delete post</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure want to delete this post ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={close} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deleteHandle} color=\"primary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import keyConst from \"../network/keyConst\";\r\nimport React, { Component } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: true,\r\n  position: toast.POSITION.TOP_RIGHT\r\n});\r\n\r\nexport const ShowToast = (type, message) => {\r\n  switch (type) {\r\n    case keyConst.TOAST_SUCCESS:\r\n      toast.success(message);\r\n      break;\r\n    case keyConst.TOAST_DANGER:\r\n      toast.error(message);\r\n      break;\r\n\r\n    case keyConst.TOAST_WARN:\r\n      toast.warn(message);\r\n      break;\r\n\r\n    default:\r\n      toast.success(message);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Avatar, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = theme => ({\r\n  large: {\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  handle: {\r\n    fontSize: 16\r\n  },\r\n  para: {\r\n    fontSize: 12,\r\n    color: \"#999\",\r\n    marginBottom: 5\r\n  }\r\n});\r\n\r\nconst Comments = props => {\r\n  const { comments } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {comments &&\r\n        comments.map((comment, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"10px 0px\",\r\n                borderTop: \"1px solid #ddd\"\r\n              }}\r\n            >\r\n              <Avatar className={classes.large} src={comment.userImage} />\r\n              <div style={{ marginLeft: 30 }}>\r\n                <Typography\r\n                  component=\"h6\"\r\n                  variant=\"h6\"\r\n                  color=\"primary\"\r\n                  className={classes.handle}\r\n                >\r\n                  @{comment.userHandle}\r\n                </Typography>\r\n                <Typography\r\n                  component=\"p\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.para}\r\n                >\r\n                  {moment(comment.createdAt).format(\"MMMM Do YYYY, h:mm:ss a\")}\r\n                </Typography>\r\n                <Typography component=\"p\">{comment.body}</Typography>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { $addComment } from \"../network/screamAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AddComment = props => {\r\n  const { screamId } = props;\r\n\r\n  const [postText, setPostText] = useState();\r\n  const [isError, setError] = useState();\r\n\r\n  const postChange = e => {\r\n    setPostText(e.target.value);\r\n    setError(false);\r\n  };\r\n\r\n  const postCommentHandler = () => {\r\n    if (postText) {\r\n      let commentData = {\r\n        body: postText\r\n      };\r\n      props.$addComment(screamId, commentData, res => {\r\n        setError(false);\r\n        setPostText(\"\");\r\n      });\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"10px 0px\" }}>\r\n      <TextField\r\n        margin=\"dense\"\r\n        id=\"body\"\r\n        label=\"Write your comment...\"\r\n        type=\"text\"\r\n        fullWidth\r\n        multiline\r\n        rows={1}\r\n        value={postText}\r\n        onChange={e => postChange(e)}\r\n        error={isError}\r\n        helperText={isError ? \"This field required!\" : \"\"}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        component={Button}\r\n        onClick={postCommentHandler}\r\n        color=\"primary\"\r\n      >\r\n        submit Comment\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { $addComment })(AddComment);\r\n","import { instance } from \"./axios\";\r\nimport urlConst from \"./urlConst\";\r\nimport keyConst from \"./keyConst\";\r\nimport {\r\n  LOADING_UI,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  SET_SCREAMS,\r\n  DELETE_SCREAM,\r\n  POST_SCREAM,\r\n  ADD_COMMENT,\r\n  SET_SCREAM\r\n} from \"../store/types\";\r\n\r\n// get all screams\r\nexport const $getAllScreams = success => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n\r\n  instance\r\n    .get(urlConst.screams_url)\r\n    .then(res => {\r\n      success(res);\r\n      dispatch({ type: SET_SCREAMS, payload: res.data });\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// get one scream\r\nexport const $getScream = (screamId, success) => dispatch => {\r\n  const url = `${urlConst.scream_url}${screamId}`;\r\n  instance\r\n    .get(url)\r\n    .then(res => {\r\n      dispatch({ type: SET_SCREAM, payload: res.data });\r\n      success(res);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// post a screams\r\nexport const $postScream = (scream, success) => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n  instance\r\n    .post(urlConst.scream_url, scream)\r\n    .then(res => {\r\n      dispatch({ type: POST_SCREAM, payload: res.data });\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n      success();\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// like a screams\r\nexport const $likeScream = (screamId, success) => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n  const url = `${urlConst.scream_url}${screamId}/like`;\r\n  instance\r\n    .post(url)\r\n    .then(res => {\r\n      dispatch({ type: LIKE_SCREAM, payload: res.data });\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n\r\n      success();\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// comment on  a screams\r\nexport const $addComment = (screamId, data, success) => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n  const url = `${urlConst.scream_url}${screamId}/comment`;\r\n  instance\r\n    .post(url, data)\r\n    .then(res => {\r\n      dispatch({ type: ADD_COMMENT, payload: res.data });\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n\r\n      success();\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// unlike a scream\r\nexport const $unlikeScream = (screamId, success) => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n\r\n  const url = `${urlConst.scream_url}${screamId}/unlike`;\r\n  instance\r\n    .post(url)\r\n    .then(res => {\r\n      dispatch({ type: UNLIKE_SCREAM, payload: res.data });\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n\r\n      success();\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// delete a scream\r\nexport const $deleteScream = (screamId, success) => dispatch => {\r\n  dispatch({ type: LOADING_UI, payload: true });\r\n\r\n  const url = `${urlConst.scream_url}${screamId}/delete`;\r\n  instance\r\n    .post(url)\r\n    .then(res => {\r\n      dispatch({ type: DELETE_SCREAM, payload: screamId });\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n      success();\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: LOADING_UI, payload: false });\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { connect } from \"react-redux\";\r\nimport { $likeScream, $unlikeScream } from \"../network/screamAction\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass Like extends Component {\r\n  state = {\r\n    isLiked: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const isLiked = this.checkLiked();\r\n    this.setState({ isLiked: isLiked });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.userData.likes !== this.props.userData.likes) {\r\n      const isLiked = this.checkLiked();\r\n      this.setState({ isLiked: isLiked });\r\n    }\r\n  }\r\n\r\n  checkLiked = () => {\r\n    if (\r\n      this.props.userData.likes &&\r\n      this.props.userData.likes.find(\r\n        like => like.screamId === this.props.screamId\r\n      )\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  likeClickHandler = () => {\r\n    if (this.props.authenticated) {\r\n      const isLiked = this.checkLiked();\r\n      if (!isLiked) {\r\n        this.props.$likeScream(this.props.screamId, res => {});\r\n      } else {\r\n        this.props.$unlikeScream(this.props.screamId, res => {});\r\n      }\r\n    } else {\r\n      alert(\"You are not logged in.\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isLiked } = this.state;\r\n    return (\r\n      <>\r\n        <IconButton\r\n          onClick={() => this.likeClickHandler()}\r\n          aria-label=\"add to favorites\"\r\n        >\r\n          {isLiked ? (\r\n            <FavoriteIcon color=\"secondary\" />\r\n          ) : (\r\n            <FavoriteBorderIcon />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {this.props.likeCount} Likes\r\n        </Typography>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.user,\r\n    authenticated: state.user.authenticated\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  $likeScream,\r\n  $unlikeScream\r\n})(Like);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport { $getScream } from \"../network/screamAction\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Comments from \"./Comments\";\r\nimport AddComment from \"./AddComment\";\r\nimport Like from \"./Like\";\r\n\r\nconst useStyles = theme => ({\r\n  large: {\r\n    width: theme.spacing(15),\r\n    height: theme.spacing(15)\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nclass ScreamDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scream: \"\",\r\n      comments: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.$getScream(this.props.screamId, res => {});\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.scream !== this.props.scream) {\r\n      this.setState({ scream: this.props.scream });\r\n    }\r\n    if (prevProps.comments !== this.props.comments) {\r\n      this.setState({ comments: this.props.comments }, () =>\r\n        console.log(this.state.comments, \"cooments\")\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, status, changeStatus, screamId } = this.props;\r\n    const {\r\n      userImage,\r\n      userHandle,\r\n      body,\r\n      createdAt,\r\n      likeCount,\r\n      commentCount\r\n    } = this.state.scream;\r\n\r\n    return (\r\n      <Dialog\r\n        open={status}\r\n        onClose={changeStatus}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        {status && this.state.scream ? (\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              <Avatar alt=\"\" src={userImage} className={classes.large} />\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                {`@${userHandle}`}\r\n              </Typography>\r\n            </div>\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"textSecondary\"\r\n              component=\"h6\"\r\n              style={{ marginBottom: 20, marginTop: 20 }}\r\n            >\r\n              {body}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"p\"\r\n              component=\"p\"\r\n              style={{ marginBottom: 10, color: \"#999\", fontSize: 14 }}\r\n            >\r\n              {moment(createdAt).format(\"MMMM Do YYYY, h:mm:ss a\")}\r\n            </Typography>\r\n            <div style={{ display: \"flex\", marginTop: \"15px\" }}>\r\n              {this.state.scream && (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    marginRight: \"35px\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <Like\r\n                    screamId={this.props.screamId}\r\n                    likeCount={this.props.likeCount}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <CommentIcon\r\n                  color=\"primary\"\r\n                  fontSize=\"small\"\r\n                  style={{ marginRight: 10 }}\r\n                />\r\n                <Typography>{commentCount} Comments</Typography>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <hr />{\" \"}\r\n            </div>\r\n            <AddComment screamId={this.props.screamId} />\r\n            <Comments comments={this.state.comments} />\r\n          </DialogContent>\r\n        ) : (\r\n          <DialogContent style={{ minHeight: \"100px\", display: \"flex\" }}>\r\n            <CircularProgress\r\n              style={{ position: \"absolute\", top: \"40px\", left: \"50%\" }}\r\n              color=\"secondary\"\r\n            />\r\n          </DialogContent>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    scream: state.scream.scream,\r\n    comments: state.scream.scream.comments\r\n  };\r\n};\r\n\r\nexport default withStyles(useStyles)(\r\n  connect(mapStateToProps, { $getScream })(ScreamDialog)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport moment from \"moment\";\r\nimport { connect, connectAdvanced } from \"react-redux\";\r\nimport { $deleteScream } from \"../network/screamAction\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport DeleteScream from \"./DeleteScream\";\r\nimport keyConst from \"../network/keyConst\";\r\nimport { ShowToast } from \"./Toster\";\r\nimport ScreamDialog from \"./ScreamDialog\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Like from \"./Like\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    maxWidth: \"90%\",\r\n    marginBottom: \"30px\"\r\n  },\r\n  media: {\r\n    height: 240\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#e91e63\"\r\n  }\r\n});\r\n\r\nclass Scream extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLiked: \"\",\r\n      deleteModal: false,\r\n      detailDialog: false,\r\n      anchorEl: false\r\n    };\r\n  }\r\n\r\n  // const [likes, setLikes] = useState();\r\n  // const [isLiked, setIsLiked] = useState();\r\n  // const [deleteModal, setDeleteModal] = useState(false);\r\n  // const [detailDialog, setDetailDialog] = useState(false);\r\n  // const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  deleteScreamHandler = () => {\r\n    this.props.$deleteScream(this.props.screamId, res => {\r\n      this.setState({ deleteModal: false });\r\n      ShowToast(keyConst.TOAST_SUCCESS, \"Post deleted successfully!\");\r\n    });\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  render() {\r\n    const {\r\n      body,\r\n      userHandle,\r\n      createdAt,\r\n      commentCount,\r\n      likeCount,\r\n      userImage,\r\n      classes\r\n    } = this.props;\r\n    const { isLiked, deleteModal, detailDialog, anchorEl } = this.state;\r\n    return (\r\n      <>\r\n        <Card className={classes.root}>\r\n          <CardHeader\r\n            avatar={<Avatar alt=\"\" src={userImage} />}\r\n            action={\r\n              <IconButton onClick={this.handleClick} aria-label=\"options\">\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            }\r\n            title={\r\n              <Link\r\n                href={`/users/${userHandle}`}\r\n                color=\"inherit\"\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: \"#515151\",\r\n                  textTransform: \"capitalize\",\r\n                  fontSize: 17,\r\n                  fontWeight: 500,\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                {userHandle}\r\n              </Link>\r\n            }\r\n            subheader={moment(createdAt).format(\"MMMM Do YYYY, h:mm:ss a\")}\r\n          />\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={this.handleClose}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                this.handleClose();\r\n                this.setState({ detailDialog: true });\r\n              }}\r\n            >\r\n              View Detail\r\n            </MenuItem>\r\n            {this.props.authenticated &&\r\n              this.props.userData &&\r\n              this.props.userData[keyConst.CREDENTIALS].handle ===\r\n                userHandle && (\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    this.handleClose();\r\n                    this.setState({ deleteModal: true });\r\n                  }}\r\n                >\r\n                  Delete Post\r\n                </MenuItem>\r\n              )}\r\n          </Menu>\r\n\r\n          <CardContent>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"h3\">\r\n              {body}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Like screamId={this.props.screamId} likeCount={likeCount} />\r\n\r\n            <IconButton aria-label=\"comment\" style={{ marginLeft: 20 }}>\r\n              <CommentIcon color=\"primary\" />\r\n            </IconButton>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {commentCount} Comments\r\n            </Typography>\r\n          </CardActions>\r\n        </Card>\r\n        <DeleteScream\r\n          status={deleteModal}\r\n          close={() => this.setState({ deleteModal: false })}\r\n          deleteHandle={this.deleteScreamHandler}\r\n        />\r\n        {detailDialog && (\r\n          <ScreamDialog\r\n            status={detailDialog}\r\n            changeStatus={() => this.setState({ detailDialog: false })}\r\n            screamId={this.props.screamId}\r\n            likeCount={likeCount}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.user,\r\n    authenticated: state.user.authenticated\r\n  };\r\n};\r\n\r\nexport default withStyles(useStyles)(\r\n  connect(mapStateToProps, {\r\n    $deleteScream\r\n  })(Scream)\r\n);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { $editUserDetail } from \"../network/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport keyConst from \"../network/keyConst\";\r\nimport { ShowToast } from \"./Toster\";\r\n\r\nconst EditProfile = props => {\r\n  const { status, changeStatus } = props;\r\n\r\n  const [bio, setBio] = useState();\r\n  const [website, setWebsite] = useState();\r\n  const [location, SetLocation] = useState();\r\n\r\n  useEffect(() => {\r\n    const { bio, website, location } = props.userData[keyConst.CREDENTIALS];\r\n    bio ? setBio(bio) : setBio(\"\");\r\n    website ? setWebsite(website) : setWebsite(\"\");\r\n    location ? SetLocation(location) : SetLocation(\"\");\r\n  }, [props.userData]);\r\n\r\n  const bioChangeHandler = e => {\r\n    setBio(e.target.value);\r\n  };\r\n  const websitChangeHandler = e => {\r\n    setWebsite(e.target.value);\r\n  };\r\n  const locationChangeHandler = e => {\r\n    SetLocation(e.target.value);\r\n  };\r\n\r\n  const editPorofileSubmitHandler = () => {\r\n    if (bio && website && location) {\r\n      const userDetail = {\r\n        bio: bio,\r\n        website: website,\r\n        location: location\r\n      };\r\n      console.log(userDetail, \"userdetail\");\r\n      props.$editUserDetail(userDetail, res => {\r\n        ShowToast(keyConst.TOAST_SUCCESS, \"Profile updated successfully!\");\r\n        changeStatus();\r\n      });\r\n    } else {\r\n      ShowToast(keyConst.TOAST_DANGER, \"Please fill all the fields!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={status}\r\n      onClose={changeStatus}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Edit your Detail</DialogTitle>\r\n      <DialogContent>\r\n        <form>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"bio\"\r\n            label=\"Bio\"\r\n            type=\"text\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            value={bio}\r\n            onChange={e => bioChangeHandler(e)}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"website\"\r\n            label=\"Website\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={website}\r\n            onChange={e => websitChangeHandler(e)}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"location\"\r\n            label=\"Location\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={location}\r\n            onChange={e => locationChangeHandler(e)}\r\n          />\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={changeStatus} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          component={Button}\r\n          onClick={editPorofileSubmitHandler}\r\n          color=\"primary\"\r\n        >\r\n          Update\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.user,\r\n    isLoading: state.UI.loading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { $editUserDetail })(EditProfile);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Avatar,\r\n  IconButton,\r\n  Button,\r\n  Link,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport PermContactCalendarIcon from \"@material-ui/icons/PermContactCalendar\";\r\nimport moment from \"moment\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { connect } from \"react-redux\";\r\nimport { $uploadProfileImage, $logoutUser } from \"../network/userAction\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport keyConst from \"../network/keyConst\";\r\nimport { ShowToast } from \"./Toster\";\r\nimport EditProfile from \"./EditProfile\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: 45,\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    },\r\n    position: \"sticky\",\r\n    top: \"80px\"\r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20)\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  }\r\n}));\r\n\r\nconst Profile = props => {\r\n  const {\r\n    handle,\r\n    imageUrl,\r\n    bio,\r\n    location,\r\n    website,\r\n    createdAt\r\n  } = props.userData[keyConst.CREDENTIALS];\r\n  const classes = useStyles();\r\n\r\n  const [editProfile, setEditProfile] = useState(false);\r\n\r\n  const clickInput = () => {\r\n    const fileInput = document.getElementById(\"profileImg\");\r\n    fileInput.click();\r\n  };\r\n\r\n  const handleImageChange = event => {\r\n    const image = event.target.files[0];\r\n    console.log(image);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image, image.name);\r\n    props.$uploadProfileImage(formData, res => console.log(res));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    props.$logoutUser(success => {\r\n      ShowToast(keyConst.TOAST_SUCCESS, \"Logout successfull !\");\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setEditProfile(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEditProfile(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {handle || props.isLoading ? (\r\n        <Card className={classes.root}>\r\n          <Badge\r\n            badgeContent={\r\n              <Tooltip title=\"Edit image\">\r\n                <IconButton onClick={() => clickInput()} aria-label=\"share\">\r\n                  <EditIcon color=\"primary\" fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <Avatar alt={handle} src={imageUrl} className={classes.large} />\r\n            <input\r\n              type=\"file\"\r\n              name=\"profiel\"\r\n              id=\"profileImg\"\r\n              onChange={e => handleImageChange(e)}\r\n              hidden\r\n              accept=\"image/png, image/jpeg\"\r\n            />\r\n          </Badge>\r\n          <CardContent>\r\n            <Link\r\n              gutterBottom\r\n              component={Link}\r\n              href={`/user/${handle}`}\r\n              variant=\"h5\"\r\n            >\r\n              {handle}\r\n            </Link>\r\n            {bio && <Typography component=\"p\">{bio}</Typography>}\r\n            {location && (\r\n              <div className=\"profile_desc\">\r\n                <IconButton aria-label=\"edit\">\r\n                  <PinDropIcon color=\"primary\" fontSize=\"small\" />\r\n                </IconButton>\r\n                <Typography className={classes.title} color=\"textSecondary\">\r\n                  {location}\r\n                </Typography>\r\n              </div>\r\n            )}\r\n            {website && (\r\n              <div className=\"profile_desc\">\r\n                <IconButton aria-label=\"edit\">\r\n                  <LanguageIcon color=\"primary\" fontSize=\"small\" />\r\n                </IconButton>\r\n                <Link\r\n                  href={website}\r\n                  className={classes.title}\r\n                  rel=\"noopener noreferrer\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {website}\r\n                </Link>\r\n              </div>\r\n            )}\r\n            {createdAt && (\r\n              <div className=\"profile_desc\">\r\n                <IconButton aria-label=\"edit\">\r\n                  <PermContactCalendarIcon color=\"primary\" fontSize=\"small\" />\r\n                </IconButton>\r\n                <Typography className={classes.title} color=\"textSecondary\">\r\n                  {moment(createdAt).format(\"MMMM Do YYYY\")}\r\n                </Typography>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n          <CardActions disableSpacing>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleClickOpen()}\r\n            >\r\n              Update Profile\r\n            </Button>\r\n            <IconButton aria-label=\"edit\" onClick={() => handleLogout()}>\r\n              <ExitToAppIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </CardActions>\r\n        </Card>\r\n      ) : (\r\n        <Paper align=\"center\">\r\n          <Typography gutterBottom align=\"center\" component=\"p\">\r\n            No profile found! please login\r\n          </Typography>\r\n          <Button\r\n            component={Link}\r\n            varient=\"contained\"\r\n            color=\"primary\"\r\n            href=\"/login\"\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            component={Link}\r\n            varient=\"contained\"\r\n            color=\"secondary\"\r\n            href=\"/signup\"\r\n          >\r\n            Signup\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n\r\n      <EditProfile status={editProfile} changeStatus={() => handleClose()} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.user,\r\n    isLoading: state.UI.loading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { $uploadProfileImage, $logoutUser })(\r\n  Profile\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { $getAllScreams } from \"../network/screamAction\";\r\nimport { $getUserData, $getAllNotifications } from \"../network/userAction\";\r\nimport Scream from \"../components/Scream\";\r\nimport { connect } from \"react-redux\";\r\nimport keyConst from \"../network/keyConst\";\r\n\r\nimport ProfileCard from \"../components/Profile\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    screams: [],\r\n    user: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.$getAllScreams(res => {});\r\n    if (this.props.screamsData.screams) {\r\n      this.setState({ screams: this.props.screamsData.screams });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.userData.authenticated !== this.props.userData.authenticated\r\n    ) {\r\n      if (this.props.userData.authenticated) {\r\n        this.props.$getUserData(res => {});\r\n        this.props.$getAllNotifications(res => {});\r\n      }\r\n    }\r\n\r\n    if (prevProps.screamsData !== this.props.screamsData) {\r\n      this.setState({ screams: this.props.screamsData.screams });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={8} xs={12}>\r\n          {this.state.screams &&\r\n            this.state.screams.map(scream => {\r\n              return <Scream key={scream.screamId} {...scream} />;\r\n            })}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <ProfileCard />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    screamsData: state.scream,\r\n    userData: state.user,\r\n    isLoading: state.UI.loading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  $getAllScreams,\r\n  $getUserData,\r\n  $getAllNotifications\r\n})(Home);\r\n","export const isEmailValid = email => {\r\n  let error = {};\r\n  const regex = /^((?!\\.)[\\w-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/;\r\n  if (!email.trim()) {\r\n    error[\"email\"] = \"Email required\";\r\n  } else if (regex.test(email.trim()) === false) {\r\n    error[\"email\"] = \"Please enter valid email\";\r\n  }\r\n  if (Object.keys(error).length) {\r\n    return error;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const isValidPassword = password => {\r\n  let error = {};\r\n  var passsReg = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n\r\n  if (!password.trim()) {\r\n    error[\"password\"] = \"Password required\";\r\n  } else if (password.length < 8) {\r\n    error[\"password\"] = \"Password should be minimum of 8 charectors\";\r\n  } else if (passsReg.test(password.trim()) === false) {\r\n    error[\"password\"] =\r\n      \"Password must contain a number, special charector, uppercase and lowercase\";\r\n  }\r\n\r\n  if (Object.keys(error).length) {\r\n    return error;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const isEmpty = text => {\r\n  if (text.trim()) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { Button, Link } from \"@material-ui/core\";\r\nimport { isEmailValid, isEmpty } from \"../utils/globalFunctions\";\r\nimport { $userLogin } from \"../network/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { ShowToast } from \"../components/Toster\";\r\nimport keyConst from \"../network/keyConst\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.emailRef = React.createRef();\r\n  }\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    error: {},\r\n    type: \"password\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.emailRef.current.focus();\r\n  }\r\n\r\n  changeTypeHandler = () => {\r\n    if (this.state.type === \"password\") {\r\n      this.setState({ type: \"text\" });\r\n    } else {\r\n      this.setState({ type: \"password\" });\r\n    }\r\n  };\r\n\r\n  textChangeHandler = (key, value) => {\r\n    if (key === \"email\") {\r\n      this.setState({ email: value });\r\n    } else {\r\n      this.setState({ password: value });\r\n    }\r\n  };\r\n  checkError = () => {\r\n    this.setState({ error: {} });\r\n    const emailCheck = isEmailValid(this.state.email);\r\n\r\n    if (emailCheck !== true) {\r\n      this.setState({ error: emailCheck }, () =>\r\n        console.log(this.state.error, \"email\")\r\n      );\r\n      return false;\r\n    } else if (isEmpty(this.state.password)) {\r\n      let err = {};\r\n      err[\"password\"] = \"Password required!\";\r\n      this.setState({ error: err });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  onSubmitHandler = () => {\r\n    const isValid = this.checkError();\r\n    const loginData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    if (isValid) {\r\n      this.props.$userLogin(loginData, res => {\r\n        ShowToast(keyConst.TOAST_SUCCESS, \"Login successfull!\");\r\n        this.props.history.push(\"/\");\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main_container\">\r\n        <div className=\"login_container\">\r\n          <div className=\"login_bnr\">\r\n            <img src=\"/img/login-bnr.jpeg\" alt=\"\" />\r\n          </div>\r\n          <div className=\"login_form_box\">\r\n            <h2 className=\"heading\" style={{ textAlign: \"center\" }}>\r\n              Login to SocialApe\r\n            </h2>\r\n            <form>\r\n              <div className=\"form_group\">\r\n                <div className=\"input_group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"input-control\"\r\n                    value={this.state.email}\r\n                    placeholder=\"Email\"\r\n                    ref={this.emailRef}\r\n                    onChange={e =>\r\n                      this.textChangeHandler(\"email\", e.target.value)\r\n                    }\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {this.state.error[\"email\"] ? this.state.error[\"email\"] : null}\r\n                </p>\r\n              </div>\r\n              <div className=\"form_group\">\r\n                <div className=\"input_group\">\r\n                  <input\r\n                    type={this.state.type}\r\n                    className=\"input-control\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={e =>\r\n                      this.textChangeHandler(\"password\", e.target.value)\r\n                    }\r\n                  />\r\n                  <IconButton onClick={() => this.changeTypeHandler()}>\r\n                    {this.state.type === \"password\" ? (\r\n                      <VisibilityOff />\r\n                    ) : (\r\n                      <Visibility />\r\n                    )}\r\n                  </IconButton>\r\n                </div>\r\n                <p>\r\n                  {this.state.error[\"password\"]\r\n                    ? this.state.error[\"password\"]\r\n                    : null}\r\n                </p>\r\n              </div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => this.onSubmitHandler()}\r\n              >\r\n                Login\r\n              </Button>\r\n              <div>\r\n                <Link href=\"/signup\">Don't have account?</Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { $userLogin })(Login);\r\n","import React, { Component } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { Button, Link } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport keyConst from \"../network/keyConst\";\r\nimport { $userSignup } from \"../network/userAction\";\r\nimport {\r\n  isEmailValid,\r\n  isValidPassword,\r\n  isEmpty\r\n} from \"../utils/globalFunctions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    handle: \"\",\r\n    error: {},\r\n    type: \"password\"\r\n  };\r\n\r\n  changeTypeHandler = () => {\r\n    if (this.state.type === \"password\") {\r\n      this.setState({ type: \"text\" });\r\n    } else {\r\n      this.setState({ type: \"password\" });\r\n    }\r\n  };\r\n\r\n  textChangeHandler = (key, value) => {\r\n    if (key === \"email\") {\r\n      this.setState({ email: value });\r\n    } else if (key === \"handle\") {\r\n      this.setState({ handle: value });\r\n    } else {\r\n      this.setState({ password: value });\r\n    }\r\n  };\r\n\r\n  checkError = () => {\r\n    this.setState({ error: {} });\r\n    const emailCheck = isEmailValid(this.state.email);\r\n    const passwordCheck = isValidPassword(this.state.password);\r\n\r\n    if (emailCheck !== true) {\r\n      this.setState({ error: emailCheck });\r\n      return false;\r\n    } else if (passwordCheck !== true) {\r\n      this.setState({ error: passwordCheck });\r\n      return false;\r\n    } else if (!isEmpty(this.state.handle)) {\r\n      let err = {};\r\n      err[\"handle\"] = \"Handle required.\";\r\n      this.setState({ error: err });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  onSubmitHandler = () => {\r\n    const isValid = this.checkError();\r\n    console.log(isValid);\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.password,\r\n      handle: this.state.handle\r\n    };\r\n    if (isValid) {\r\n      $userSignup(data, res => {\r\n        console.log(res, \"signup\");\r\n        this.props.history.push(\"/\");\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main_container\">\r\n        <div className=\"login_container\">\r\n          <div className=\"login_bnr\">\r\n            <img src=\"/img/login-bnr.jpeg\" alt=\"\" />\r\n          </div>\r\n          <div className=\"login_form_box\">\r\n            <h2 className=\"heading\" style={{ textAlign: \"center\" }}>\r\n              Register to SocialApe\r\n            </h2>\r\n            <form action=\"\">\r\n              <div className=\"form_group\">\r\n                <div className=\"input_group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"input-control\"\r\n                    required\r\n                    placeholder=\"Email\"\r\n                    onChange={e =>\r\n                      this.textChangeHandler(\"email\", e.target.value)\r\n                    }\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {this.state.error[\"email\"] ? this.state.error[\"email\"] : null}\r\n                </p>\r\n              </div>\r\n              <div className=\"form_group\">\r\n                <div className=\"input_group\">\r\n                  <input\r\n                    type={this.state.type}\r\n                    className=\"input-control\"\r\n                    required\r\n                    placeholder=\"Password\"\r\n                    onChange={e =>\r\n                      this.textChangeHandler(\"password\", e.target.value)\r\n                    }\r\n                  />\r\n                  <IconButton onClick={() => this.changeTypeHandler()}>\r\n                    {this.state.type === \"password\" ? (\r\n                      <VisibilityOff />\r\n                    ) : (\r\n                      <Visibility />\r\n                    )}\r\n                  </IconButton>\r\n                </div>\r\n                <p>\r\n                  {this.state.error[\"password\"]\r\n                    ? this.state.error[\"password\"]\r\n                    : null}\r\n                </p>\r\n              </div>\r\n              <div className=\"form_group\">\r\n                <div className=\"input_group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"input-control\"\r\n                    required\r\n                    placeholder=\"Handle\"\r\n                    onChange={e =>\r\n                      this.textChangeHandler(\"handle\", e.target.value)\r\n                    }\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {this.state.error[\"handle\"]\r\n                    ? this.state.error[\"handle\"]\r\n                    : null}\r\n                </p>\r\n              </div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => this.onSubmitHandler()}\r\n              >\r\n                Register now\r\n              </Button>\r\n              <div>\r\n                <Link href=\"/login\">Already have account?</Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, $userSignup)(Signup);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { $postScream } from \"../network/screamAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { ShowToast } from \"./Toster\";\r\nimport keyConst from \"../network/keyConst\";\r\n\r\nconst PostScream = props => {\r\n  const { status, changeStatus } = props;\r\n\r\n  const [postText, setPostText] = useState();\r\n  const [isError, setError] = useState();\r\n\r\n  const postChange = e => {\r\n    setPostText(e.target.value);\r\n    setError(false);\r\n  };\r\n\r\n  const postScreamHandler = () => {\r\n    if (postText) {\r\n      let screamData = {\r\n        body: postText\r\n      };\r\n      props.$postScream(screamData, res => {\r\n        changeStatus();\r\n        ShowToast(keyConst.TOAST_SUCCESS, \"Screams posted successfully!\");\r\n        setError(false);\r\n        setPostText(\"\");\r\n      });\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={status}\r\n      onClose={() => {\r\n        changeStatus();\r\n        setError(false);\r\n      }}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Create a post</DialogTitle>\r\n      <DialogContent>\r\n        <form>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"body\"\r\n            label=\"Write something...\"\r\n            type=\"text\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            value={postText}\r\n            onChange={e => postChange(e)}\r\n            error={isError}\r\n            helperText={isError ? \"This field required!\" : \"\"}\r\n          />\r\n\r\n          {/* <TextField\r\n            margin=\"dense\"\r\n            id=\"location\"\r\n            label=\"Location\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value=\"\"\r\n            onChange={e => postImage(e)}\r\n          /> */}\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            changeStatus();\r\n            setError(false);\r\n          }}\r\n          color=\"secondary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button component={Button} onClick={postScreamHandler} color=\"primary\">\r\n          Post\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default connect(null, { $postScream })(PostScream);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// MUI\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nimport { $logoutUser } from \"../network/userAction\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PostScream from \"./PostScream\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    isPostScream: false\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <AppBar>\r\n          <Toolbar style={{ width: \"90%\", margin: \"0 auto\" }}>\r\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n              SocialApe\r\n            </Typography>\r\n            {this.props.authenticated ? (\r\n              <div className=\"navbar_right\">\r\n                <Tooltip title=\"Create a post\">\r\n                  <IconButton\r\n                    style={{ color: \"#fff\" }}\r\n                    onClick={() => {\r\n                      this.setState({ isPostScream: true });\r\n                    }}\r\n                    aria-label=\"share\"\r\n                  >\r\n                    <AddIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Home\">\r\n                  <IconButton\r\n                    style={{ color: \"#fff\" }}\r\n                    onClick={() => {}}\r\n                    aria-label=\"share\"\r\n                  >\r\n                    <HomeIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Notifications\">\r\n                  <IconButton\r\n                    style={{ color: \"#fff\" }}\r\n                    onClick={() => {}}\r\n                    aria-label=\"share\"\r\n                  >\r\n                    <Badge\r\n                      badgeContent={\r\n                        this.props.notifications\r\n                          ? this.props.notifications.length\r\n                          : 0\r\n                      }\r\n                      color=\"secondary\"\r\n                    >\r\n                      <NotificationsIcon fontSize=\"small\" />\r\n                    </Badge>\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar_right\">\r\n                <Button component={Link} to=\"/\" color=\"inherit\">\r\n                  Home\r\n                </Button>\r\n                <Button component={Link} to=\"/login\" color=\"inherit\">\r\n                  Login\r\n                </Button>\r\n                <Button component={Link} to=\"/signup\" color=\"inherit\">\r\n                  Signup\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <PostScream\r\n          status={this.state.isPostScream}\r\n          changeStatus={() => this.setState({ isPostScream: false })}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authenticated: state.user.authenticated,\r\n    notifications: state.user.notifications\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { $logoutUser })(Navbar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Loader = props => {\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <CircularProgress variant=\"determinate\" value={progress} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport PropsTypes from \"prop-types\";\n\n// page and compoentns\nimport Home from \"./pages/home\";\nimport Login from \"./pages/login\";\nimport Signup from \"./pages/signup\";\nimport Navbar from \"./components/Navbar\";\nimport Mytheme from \"./utils/theme\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthRoute from \"./utils/AuthRoute\";\nimport Loader from \"./utils/Loader\";\nimport { connect } from \"react-redux\";\nimport { SET_AUTHENTICATED } from \"./store/types\";\n\nconst theme = createMuiTheme(Mytheme);\n\nlet authenticated;\nconst token = localStorage.FBToken;\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    window.location.href = \"/login\";\n    authenticated = false;\n    localStorage.clear();\n  } else {\n    authenticated = true;\n  }\n}\n\nfunction App(props) {\n  useEffect(() => {\n    const token = localStorage.getItem(\"FBToken\");\n    if (token) {\n      props.setAuthenticated();\n    }\n  });\n  return (\n    <MuiThemeProvider theme={theme}>\n      {props.isLoading && <Loader />}\n      <div className=\"App\">\n        <Router>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <AuthRoute\n                exact\n                path=\"/login\"\n                component={Login}\n                authenticated={props.authenticated}\n              />\n              <AuthRoute\n                exact\n                path=\"/signup\"\n                component={Signup}\n                authenticated={props.authenticated}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nAuthRoute.prototype = {\n  user: PropsTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    authenticated: state.user.authenticated,\n    isLoading: state.UI.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthenticated: () => dispatch({ type: SET_AUTHENTICATED })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export default {\r\n  palette: {\r\n    primary: {\r\n      light: \"#33c9dc\",\r\n      main: \"#00bcd4\",\r\n      dark: \"#008394\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: {\r\n      light: \"#ff6333\",\r\n      main: \"#ff3d00\",\r\n      dark: \"#b22a00\",\r\n      contrastText: \"#fff\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  form: {\r\n    textAlign: \"center\"\r\n  },\r\n  image: {\r\n    margin: \"20px auto 20px auto\"\r\n  },\r\n  pageTitle: {\r\n    margin: \"10px auto 10px auto\"\r\n  },\r\n  textField: {\r\n    margin: \"10px auto 10px auto\"\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    position: \"relative\"\r\n  },\r\n  customError: {\r\n    color: \"red\",\r\n    fontSize: \"0.8rem\",\r\n    marginTop: 10\r\n  },\r\n  progress: {\r\n    position: \"absolute\"\r\n  },\r\n  invisibleSeparator: {\r\n    border: \"none\",\r\n    margin: 4\r\n  },\r\n  visibleSeparator: {\r\n    width: \"100%\",\r\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\r\n    marginBottom: 20\r\n  },\r\n  paper: {\r\n    padding: 20\r\n  },\r\n  profile: {\r\n    \"& .image-wrapper\": {\r\n      textAlign: \"center\",\r\n      position: \"relative\",\r\n      \"& button\": {\r\n        position: \"absolute\",\r\n        top: \"80%\",\r\n        left: \"70%\"\r\n      }\r\n    },\r\n    \"& .profile-image\": {\r\n      width: 200,\r\n      height: 200,\r\n      objectFit: \"cover\",\r\n      maxWidth: \"100%\",\r\n      borderRadius: \"50%\"\r\n    },\r\n    \"& .profile-details\": {\r\n      textAlign: \"center\",\r\n      \"& span, svg\": {\r\n        verticalAlign: \"middle\"\r\n      },\r\n      \"& a\": {\r\n        color: \"#00bcd4\"\r\n      }\r\n    },\r\n    \"& hr\": {\r\n      border: \"none\",\r\n      margin: \"0 0 10px 0\"\r\n    },\r\n    \"& svg.button\": {\r\n      \"&:hover\": {\r\n        cursor: \"pointer\"\r\n      }\r\n    }\r\n  },\r\n  buttons: {\r\n    textAlign: \"center\",\r\n    \"& a\": {\r\n      margin: \"20px 10px\"\r\n    }\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  USER_LOGOUT,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  credentials: {},\r\n  authenticated: false,\r\n  likes: [],\r\n  notifications: []\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: true\r\n      };\r\n\r\n    case SET_UNAUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: false\r\n      };\r\n\r\n    case USER_LOGOUT:\r\n      return {\r\n        ...initialState\r\n      };\r\n\r\n    case LIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: [\r\n          ...state.likes,\r\n          {\r\n            userHandle: state.credentials.handle,\r\n            screamId: action.payload.screamId\r\n          }\r\n        ]\r\n      };\r\n\r\n    case UNLIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: state.likes.filter(\r\n          like => like.screamId !== action.payload.screamId\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import {\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  SET_SCREAMS,\r\n  DELETE_SCREAM,\r\n  POST_SCREAM,\r\n  SET_SCREAM,\r\n  ADD_COMMENT\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  screams: [],\r\n  scream: {}\r\n};\r\n\r\nconst screamReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SCREAMS:\r\n      return {\r\n        ...state,\r\n        screams: action.payload\r\n      };\r\n\r\n    case LIKE_SCREAM:\r\n    case UNLIKE_SCREAM:\r\n      const index = state.screams.findIndex(\r\n        scream => scream.screamId === action.payload.screamId\r\n      );\r\n      state.screams[index] = action.payload;\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case DELETE_SCREAM:\r\n      const newIndex = state.screams.findIndex(\r\n        scream => scream.screamId === action.payload\r\n      );\r\n      state.screams.splice(newIndex, 1);\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case SET_SCREAM:\r\n      return {\r\n        ...state,\r\n        scream: { ...action.payload }\r\n      };\r\n\r\n    case POST_SCREAM:\r\n      return {\r\n        ...state,\r\n        screams: [action.payload, ...state.screams]\r\n      };\r\n    case ADD_COMMENT:\r\n      let comments = [action.payload, ...state.scream.comments];\r\n      let scream = state.scream;\r\n      scream.comments = comments;\r\n      scream.commentCount += 1;\r\n      let tempScreams = [...state.screams];\r\n      const commentindex = tempScreams.findIndex(\r\n        scream => scream.screamId === action.payload.screamId\r\n      );\r\n      tempScreams[commentindex].commentCount += 1;\r\n      return {\r\n        ...state,\r\n        screams: tempScreams,\r\n        scream: scream\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default screamReducer;\r\n","import { LOADING_UI } from \"../types\";\r\n\r\nconst initialState = {\r\n  showLoader: false,\r\n  loading: false\r\n};\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport userReducer from \"./userReducer\";\r\nimport screamReducer from \"./screamReducer\";\r\nimport uiReducer from \"./uiReducer\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  scream: screamReducer,\r\n  UI: uiReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store/reducers\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}